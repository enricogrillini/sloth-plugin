<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<DbToolProject xmlns="http://www.eg.it/DbSchema">
    <Connection DbType="ORACLE" DriverName="oracle.jdbc.driver.OracleDriver" JdbcUrl="jdbc:oracle:thin:@localhost:1521:XE" User="gilda" Password="gilda" Owner="gilda" Name="defaultDb"/>
    <DataBase>
        <Tables>
            <Table Tablespace="USERS" Initial="65536.0" Temporary="false" Name="Aforismi">
                <Columns>
                    <Column PrimaryKey="true" Nullable="false" Type="NUMBER(38,0)" Position="0" DataLength="22" Name="Idaforisma"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(1000)" Position="1" DataLength="1000" Name="Aforisma"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(100)" Position="2" DataLength="100" Name="Autore"/>
                    <Column PrimaryKey="false" Nullable="true" Type="DATE" Position="3" DataLength="7" Name="Dataultimapublicazione"/>
                </Columns>
                <Indexes/>
                <Constraints>
                    <Constraint Type="PrimaryKey" Generated="false" Name="AFORISMI_PK">
                        <Columns>
                            <ConstraintColumn Name="IDAFORISMA"/>
                        </Columns>
                    </Constraint>
                </Constraints>
                <Triggers/>
                <ForeignKeyReferences/>
                <Grants/>
                <Partitions/>
                <Constants/>
            </Table>
            <Table Tablespace="USERS" Initial="65536.0" Temporary="false" Name="Batch_Crontrigger">
                <Columns>
                    <Column PrimaryKey="true" Nullable="false" Type="NUMBER(38,0)" Position="0" DataLength="22" Name="Idcrontrigger"/>
                    <Column PrimaryKey="false" Nullable="true" Type="NUMBER(38,0)" Position="1" DataLength="22" Name="Idjob"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(50)" Position="2" DataLength="50" Name="Minuti"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(50)" Position="3" DataLength="50" Name="Ore"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(50)" Position="4" DataLength="50" Name="Giornodelmese"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(10)" Position="5" DataLength="10" Name="Mese"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(10)" Position="6" DataLength="10" Name="Giornodellasettimana"/>
                </Columns>
                <Indexes/>
                <Constraints>
                    <Constraint Type="PrimaryKey" Generated="false" Name="BATCH_CRONTRIGGER_PK">
                        <Columns>
                            <ConstraintColumn Name="IDCRONTRIGGER"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="ForeignKey" Generated="false" Table="BATCH_JOB" Name="BATCH_CRONTRIGGER_FK1">
                        <Columns>
                            <ConstraintColumn Name="IDJOB"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;MINUTI&quot; IS NOT NULL" Generated="true" Name="SYS_C008929">
                        <Columns>
                            <ConstraintColumn Name="MINUTI"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;ORE&quot; IS NOT NULL" Generated="true" Name="SYS_C008930">
                        <Columns>
                            <ConstraintColumn Name="ORE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;GIORNODELMESE&quot; IS NOT NULL" Generated="true" Name="SYS_C008931">
                        <Columns>
                            <ConstraintColumn Name="GIORNODELMESE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;MESE&quot; IS NOT NULL" Generated="true" Name="SYS_C008932">
                        <Columns>
                            <ConstraintColumn Name="MESE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;GIORNODELLASETTIMANA&quot; IS NOT NULL" Generated="true" Name="SYS_C008933">
                        <Columns>
                            <ConstraintColumn Name="GIORNODELLASETTIMANA"/>
                        </Columns>
                    </Constraint>
                </Constraints>
                <Triggers/>
                <ForeignKeyReferences/>
                <Grants/>
                <Partitions/>
                <Constants/>
            </Table>
            <Table Tablespace="USERS" Initial="65536.0" Temporary="false" Name="Batch_Job">
                <Columns>
                    <Column PrimaryKey="true" Nullable="false" Type="NUMBER(38,0)" Position="0" DataLength="22" Name="Idjob"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(100)" Position="1" DataLength="100" Name="Classname"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(50)" Position="2" DataLength="50" Name="Jobname"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(50)" Position="3" DataLength="50" Name="Groupname"/>
                </Columns>
                <Indexes/>
                <Constraints>
                    <Constraint Type="PrimaryKey" Generated="false" Name="BATCH_JOB_PK">
                        <Columns>
                            <ConstraintColumn Name="IDJOB"/>
                        </Columns>
                    </Constraint>
                </Constraints>
                <Triggers/>
                <ForeignKeyReferences>
                    <ForeignKeyReference TableName="Batch_Crontrigger"/>
                </ForeignKeyReferences>
                <Grants/>
                <Partitions/>
                <Constants/>
            </Table>
            <Table Tablespace="USERS" Initial="204800.0" Temporary="false" Name="Clienti">
                <Columns>
                    <Column PrimaryKey="true" Nullable="false" Type="NUMBER(38,0)" Position="0" DataLength="22" Name="Idcliente"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(100)" Position="1" DataLength="100" Name="Ragionesociale"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(100)" Position="2" DataLength="100" Name="Indirizzo"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(10)" Position="3" DataLength="10" Name="Codtipocliente"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(16)" Position="4" DataLength="16" Name="Partitaiva"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(16)" Position="5" DataLength="16" Name="Codicefiscale"/>
                    <Column PrimaryKey="false" Nullable="true" Type="DATE" Position="6" DataLength="7" Name="Dataultimoacquisto"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(1000)" Position="7" DataLength="1000" Name="Note"/>
                </Columns>
                <Indexes/>
                <Constraints>
                    <Constraint Type="PrimaryKey" Generated="false" Name="CLIENTI_PK">
                        <Columns>
                            <ConstraintColumn Name="IDCLIENTE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="ForeignKey" Generated="false" Table="DEC_TIPICLIENTE" Name="CLIENTI_FK1">
                        <Columns>
                            <ConstraintColumn Name="CODTIPOCLIENTE"/>
                        </Columns>
                    </Constraint>
                </Constraints>
                <Triggers/>
                <ForeignKeyReferences>
                    <ForeignKeyReference TableName="Ordini"/>
                </ForeignKeyReferences>
                <Grants/>
                <Partitions/>
                <Constants/>
            </Table>
            <Table Tablespace="USERS" Initial="65536.0" Temporary="false" Name="Dec_Tipicliente">
                <Columns>
                    <Column PrimaryKey="true" Nullable="false" Type="VARCHAR2(10)" Position="0" DataLength="10" Name="Codtipocliente"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(20)" Position="1" DataLength="20" Name="Descrizionebreve"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(100)" Position="2" DataLength="100" Name="Descrizionelunga"/>
                    <Column PrimaryKey="false" Nullable="false" Type="NUMBER(38,0)" Position="3" DataLength="22" Name="Posizione"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(1)" Position="4" DataLength="1" Name="Flagvalido"/>
                </Columns>
                <Indexes/>
                <Constraints>
                    <Constraint Type="PrimaryKey" Generated="false" Name="DEC_TIPICLIENTE_PK">
                        <Columns>
                            <ConstraintColumn Name="CODTIPOCLIENTE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="flagvalido in ('S', 'N')" Generated="false" Name="DEC_TIPICLIENTE_C1">
                        <Columns>
                            <ConstraintColumn Name="FLAGVALIDO"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;CODTIPOCLIENTE&quot; IS NOT NULL" Generated="true" Name="SYS_C007036">
                        <Columns>
                            <ConstraintColumn Name="CODTIPOCLIENTE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;DESCRIZIONEBREVE&quot; IS NOT NULL" Generated="true" Name="SYS_C007037">
                        <Columns>
                            <ConstraintColumn Name="DESCRIZIONEBREVE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;DESCRIZIONELUNGA&quot; IS NOT NULL" Generated="true" Name="SYS_C007038">
                        <Columns>
                            <ConstraintColumn Name="DESCRIZIONELUNGA"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;POSIZIONE&quot; IS NOT NULL" Generated="true" Name="SYS_C007039">
                        <Columns>
                            <ConstraintColumn Name="POSIZIONE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;FLAGVALIDO&quot; IS NOT NULL" Generated="true" Name="SYS_C007040">
                        <Columns>
                            <ConstraintColumn Name="FLAGVALIDO"/>
                        </Columns>
                    </Constraint>
                </Constraints>
                <Triggers/>
                <ForeignKeyReferences>
                    <ForeignKeyReference TableName="Clienti"/>
                </ForeignKeyReferences>
                <Grants/>
                <Partitions/>
                <Constants>
                    <Constant Value="BUS" Name="BUSINESS"/>
                    <Constant Value="CONS" Name="CONSUMER"/>
                </Constants>
            </Table>
            <Table Tablespace="USERS" Initial="1048576.0" Temporary="false" Name="Logelaborazioni">
                <Columns>
                    <Column PrimaryKey="true" Description="ID" Nullable="false" Type="NUMBER(38,0)" Position="0" DataLength="22" Name="Idlogelaborazione"/>
                    <Column PrimaryKey="false" Description="Inizio" Nullable="true" Type="DATE" Position="1" DataLength="7" Name="Datainizio"/>
                    <Column PrimaryKey="false" Description="Ultimo aggiornamento" Nullable="true" Type="DATE" Position="2" DataLength="7" Name="Dataaggiornamento"/>
                    <Column PrimaryKey="false" Description="Fine" Nullable="true" Type="DATE" Position="3" DataLength="7" Name="Datafine"/>
                    <Column PrimaryKey="false" Description="ID Utente" Nullable="true" Type="NUMBER(38,0)" Position="4" DataLength="22" Name="Idutente"/>
                    <Column PrimaryKey="false" Description="Elaborazione" Nullable="true" Type="VARCHAR2(200)" Position="5" DataLength="200" Name="Elaborazione"/>
                    <Column PrimaryKey="false" Description="Stato" Nullable="true" Type="VARCHAR2(2)" Position="6" DataLength="2" Name="Stato"/>
                    <Column PrimaryKey="false" Description="Perc." Nullable="true" Type="NUMBER(38,0)" Position="7" DataLength="22" Name="Percentuale"/>
                    <Column PrimaryKey="false" Description="Messaggio" Nullable="true" Type="VARCHAR2(4000)" Position="8" DataLength="4000" Name="Messaggio"/>
                    <Column PrimaryKey="false" Nullable="true" Type="BLOB" Position="9" DataLength="4000" Name="Filesintesi"/>
                </Columns>
                <Indexes/>
                <Constraints>
                    <Constraint Type="PrimaryKey" Generated="false" Name="LOGELABORAZIONI_PK">
                        <Columns>
                            <ConstraintColumn Name="IDLOGELABORAZIONE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;IDLOGELABORAZIONE&quot; IS NOT NULL" Generated="true" Name="SYS_C007058">
                        <Columns>
                            <ConstraintColumn Name="IDLOGELABORAZIONE"/>
                        </Columns>
                    </Constraint>
                </Constraints>
                <Triggers/>
                <ForeignKeyReferences>
                    <ForeignKeyReference TableName="Logelaborazionidettaglio"/>
                </ForeignKeyReferences>
                <Grants/>
                <Partitions/>
                <Constants/>
            </Table>
            <Table Tablespace="USERS" Initial="6.7108864E7" Temporary="false" Name="Logelaborazionidettaglio">
                <Columns>
                    <Column PrimaryKey="true" Nullable="false" Type="NUMBER(38,0)" Position="0" DataLength="22" Name="Idlogelaborazionedettaglio"/>
                    <Column PrimaryKey="false" Nullable="false" Type="NUMBER(38,0)" Position="1" DataLength="22" Name="Idlogelaborazione"/>
                    <Column PrimaryKey="false" Nullable="true" Type="DATE" Position="2" DataLength="7" Name="Data"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(1)" Position="3" DataLength="1" Name="Stato"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(4000)" Position="4" DataLength="4000" Name="Messaggio"/>
                </Columns>
                <Indexes/>
                <Constraints>
                    <Constraint Type="PrimaryKey" Generated="false" Name="LOGELABORAZIONIDETTAGLIO_PK">
                        <Columns>
                            <ConstraintColumn Name="IDLOGELABORAZIONEDETTAGLIO"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="ForeignKey" Generated="false" Table="LOGELABORAZIONI" Name="LOGELABORAZIONIDETTAGLIO_FK1">
                        <Columns>
                            <ConstraintColumn Name="IDLOGELABORAZIONE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;IDLOGELABORAZIONEDETTAGLIO&quot; IS NOT NULL" Generated="true" Name="SYS_C007012">
                        <Columns>
                            <ConstraintColumn Name="IDLOGELABORAZIONEDETTAGLIO"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;IDLOGELABORAZIONE&quot; IS NOT NULL" Generated="true" Name="SYS_C007013">
                        <Columns>
                            <ConstraintColumn Name="IDLOGELABORAZIONE"/>
                        </Columns>
                    </Constraint>
                </Constraints>
                <Triggers/>
                <ForeignKeyReferences/>
                <Grants/>
                <Partitions/>
                <Constants/>
            </Table>
            <Table Tablespace="USERS" Initial="204800.0" Temporary="false" Name="Ordini">
                <Columns>
                    <Column PrimaryKey="true" Nullable="false" Type="NUMBER(38,0)" Position="0" DataLength="22" Name="Idordine"/>
                    <Column PrimaryKey="false" Nullable="true" Type="NUMBER(38,0)" Position="1" DataLength="22" Name="Idcliente"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(100)" Position="2" DataLength="100" Name="Descrizione"/>
                    <Column PrimaryKey="false" Nullable="true" Type="DATE" Position="3" DataLength="7" Name="Data"/>
                    <Column PrimaryKey="false" Nullable="true" Type="FLOAT(126)" Position="4" DataLength="22" Name="Importo"/>
                </Columns>
                <Indexes/>
                <Constraints>
                    <Constraint Type="PrimaryKey" Generated="false" Name="ORDINI_PK">
                        <Columns>
                            <ConstraintColumn Name="IDORDINE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="ForeignKey" Generated="false" Table="CLIENTI" Name="ORDINI_FK1">
                        <Columns>
                            <ConstraintColumn Name="IDCLIENTE"/>
                        </Columns>
                    </Constraint>
                </Constraints>
                <Triggers/>
                <ForeignKeyReferences/>
                <Grants/>
                <Partitions/>
                <Constants/>
            </Table>
            <Table Tablespace="USERS" Initial="65536.0" Temporary="false" Name="Sched_Scheduler">
                <Columns>
                    <Column PrimaryKey="true" Nullable="false" Type="NUMBER(38,0)" Position="0" DataLength="22" Name="Idscheduler"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(50)" Position="1" DataLength="50" Name="Minuti"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(50)" Position="2" DataLength="50" Name="Ore"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(50)" Position="3" DataLength="50" Name="Giornodelmese"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(10)" Position="4" DataLength="10" Name="Mese"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(10)" Position="5" DataLength="10" Name="Giornodellasettimana"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(100)" Position="6" DataLength="100" Name="Jobname"/>
                </Columns>
                <Indexes/>
                <Constraints>
                    <Constraint Type="PrimaryKey" Generated="false" Name="SCHED_SCHEDULER_PK">
                        <Columns>
                            <ConstraintColumn Name="IDSCHEDULER"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;IDSCHEDULER&quot; IS NOT NULL" Generated="true" Name="SYS_C007029">
                        <Columns>
                            <ConstraintColumn Name="IDSCHEDULER"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;MINUTI&quot; IS NOT NULL" Generated="true" Name="SYS_C007030">
                        <Columns>
                            <ConstraintColumn Name="MINUTI"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;ORE&quot; IS NOT NULL" Generated="true" Name="SYS_C007031">
                        <Columns>
                            <ConstraintColumn Name="ORE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;GIORNODELMESE&quot; IS NOT NULL" Generated="true" Name="SYS_C007032">
                        <Columns>
                            <ConstraintColumn Name="GIORNODELMESE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;MESE&quot; IS NOT NULL" Generated="true" Name="SYS_C007033">
                        <Columns>
                            <ConstraintColumn Name="MESE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;GIORNODELLASETTIMANA&quot; IS NOT NULL" Generated="true" Name="SYS_C007034">
                        <Columns>
                            <ConstraintColumn Name="GIORNODELLASETTIMANA"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;JOBNAME&quot; IS NOT NULL" Generated="true" Name="SYS_C007035">
                        <Columns>
                            <ConstraintColumn Name="JOBNAME"/>
                        </Columns>
                    </Constraint>
                </Constraints>
                <Triggers/>
                <ForeignKeyReferences/>
                <Grants/>
                <Partitions/>
                <Constants/>
            </Table>
            <Table Tablespace="USERS" Initial="65536.0" Temporary="false" Name="Sec_Dec_Funzioni">
                <Columns>
                    <Column PrimaryKey="true" Nullable="false" Type="VARCHAR2(100)" Position="0" DataLength="100" Name="Codfunzione"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(20)" Position="1" DataLength="20" Name="Descrizionebreve"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(100)" Position="2" DataLength="100" Name="Descrizionelunga"/>
                    <Column PrimaryKey="false" Nullable="false" Type="NUMBER(38,0)" Position="3" DataLength="22" Name="Posizione"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(1)" Position="4" DataLength="1" Name="Flagvalido"/>
                </Columns>
                <Indexes/>
                <Constraints>
                    <Constraint Type="PrimaryKey" Generated="false" Name="SEC_DEC_FUNZIONI_PK">
                        <Columns>
                            <ConstraintColumn Name="CODFUNZIONE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;DESCRIZIONEBREVE&quot; IS NOT NULL" Generated="true" Name="SYS_C007553">
                        <Columns>
                            <ConstraintColumn Name="DESCRIZIONEBREVE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;DESCRIZIONELUNGA&quot; IS NOT NULL" Generated="true" Name="SYS_C007554">
                        <Columns>
                            <ConstraintColumn Name="DESCRIZIONELUNGA"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;POSIZIONE&quot; IS NOT NULL" Generated="true" Name="SYS_C007555">
                        <Columns>
                            <ConstraintColumn Name="POSIZIONE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;FLAGVALIDO&quot; IS NOT NULL" Generated="true" Name="SYS_C007556">
                        <Columns>
                            <ConstraintColumn Name="FLAGVALIDO"/>
                        </Columns>
                    </Constraint>
                </Constraints>
                <Triggers/>
                <ForeignKeyReferences>
                    <ForeignKeyReference TableName="Sec_Funzioniruoli"/>
                </ForeignKeyReferences>
                <Grants/>
                <Partitions/>
                <Constants>
                    <Constant Value="DECODIFICHE" Name="DECODIFICHE"/>
                    <Constant Value="HRMSADMIN" Name="HRMSADMIN"/>
                    <Constant Value="LOGGED" Name="LOGGED"/>
                    <Constant Value="SYSADMIN" Name="SYSADMIN"/>
                </Constants>
            </Table>
            <Table Tablespace="USERS" Initial="65536.0" Temporary="false" Name="Sec_Dec_Menu">
                <Columns>
                    <Column PrimaryKey="true" Nullable="false" Type="VARCHAR2(100)" Position="0" DataLength="100" Name="Codmenu"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(20)" Position="1" DataLength="20" Name="Descrizionebreve"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(100)" Position="2" DataLength="100" Name="Descrizionelunga"/>
                    <Column PrimaryKey="false" Nullable="false" Type="NUMBER(38,0)" Position="3" DataLength="22" Name="Posizione"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(1)" Position="4" DataLength="1" Name="Flagvalido"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(10)" Position="5" DataLength="10" Name="Codtipovoce"/>
                    <Column PrimaryKey="false" Nullable="false" Type="NUMBER(38,0)" Position="6" DataLength="22" Name="Livello"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(100)" Position="7" DataLength="100" Name="Imghtml"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(200)" Position="8" DataLength="200" Name="Link"/>
                </Columns>
                <Indexes/>
                <Constraints>
                    <Constraint Type="PrimaryKey" Generated="false" Name="SEC_DEC_MENU_PK">
                        <Columns>
                            <ConstraintColumn Name="CODMENU"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="ForeignKey" Generated="false" Table="SEC_DEC_TIPIVOCE" Name="SEC_MENU_FK1">
                        <Columns>
                            <ConstraintColumn Name="CODTIPOVOCE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="flagvalido in ('S', 'N')" Generated="false" Name="SEC_DEC_MENU_C1">
                        <Columns>
                            <ConstraintColumn Name="FLAGVALIDO"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="Livello in (1, 2)" Generated="false" Name="SEC_DEC_MENU_C2">
                        <Columns>
                            <ConstraintColumn Name="LIVELLO"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;DESCRIZIONEBREVE&quot; IS NOT NULL" Generated="true" Name="SYS_C007052">
                        <Columns>
                            <ConstraintColumn Name="DESCRIZIONEBREVE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;DESCRIZIONELUNGA&quot; IS NOT NULL" Generated="true" Name="SYS_C007053">
                        <Columns>
                            <ConstraintColumn Name="DESCRIZIONELUNGA"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;POSIZIONE&quot; IS NOT NULL" Generated="true" Name="SYS_C007054">
                        <Columns>
                            <ConstraintColumn Name="POSIZIONE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;FLAGVALIDO&quot; IS NOT NULL" Generated="true" Name="SYS_C007055">
                        <Columns>
                            <ConstraintColumn Name="FLAGVALIDO"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;CODTIPOVOCE&quot; IS NOT NULL" Generated="true" Name="SYS_C007056">
                        <Columns>
                            <ConstraintColumn Name="CODTIPOVOCE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;LIVELLO&quot; IS NOT NULL" Generated="true" Name="SYS_C007057">
                        <Columns>
                            <ConstraintColumn Name="LIVELLO"/>
                        </Columns>
                    </Constraint>
                </Constraints>
                <Triggers/>
                <ForeignKeyReferences>
                    <ForeignKeyReference TableName="Sec_Menuruoli"/>
                </ForeignKeyReferences>
                <Grants/>
                <Partitions/>
                <Constants>
                    <Constant Value="CLIENTI" Name="CLIENTI"/>
                    <Constant Value="CONTROLLI" Name="CONTROLLI"/>
                    <Constant Value="DECODIFICHE" Name="DECODIFICHE"/>
                    <Constant Value="DECODIFICHE_TIPICLIENTE" Name="TIPI_CLIENTE"/>
                    <Constant Value="HOME" Name="HOME"/>
                    <Constant Value="ORDINI" Name="ORDINI"/>
                    <Constant Value="REPORT" Name="REPORT"/>
                    <Constant Value="SEP_SYSADMIN" Name="SEPARATORE"/>
                    <Constant Value="SEZIONE_SYSADMIN" Name="PIATTAFORMA"/>
                    <Constant Value="SICUREZZA" Name="SICUREZZA"/>
                    <Constant Value="SICUREZZA_FUNZIONI" Name="FUNZIONI"/>
                    <Constant Value="SICUREZZA_INTERFACCIA" Name="INTERFACCIA"/>
                    <Constant Value="SICUREZZA_MENU" Name="MENU"/>
                    <Constant Value="SICUREZZA_MENU-UTENTE" Name="MENU_UTENTE"/>
                    <Constant Value="SICUREZZA_PROFILAZIONE" Name="PROFILAZIONE"/>
                    <Constant Value="SICUREZZA_RUOLI" Name="RUOLI"/>
                    <Constant Value="SICUREZZA_UTENTI" Name="UTENTI"/>
                    <Constant Value="UTILITA" Name="UTILIT_"/>
                    <Constant Value="UTILITA_JOB" Name="JOB"/>
                    <Constant Value="UTILITA_LOG" Name="LOG"/>
                    <Constant Value="UTILITA_MAILSENDER" Name="MAIL_SENDER"/>
                    <Constant Value="UTILITA_MONITOR" Name="MONITOR"/>
                    <Constant Value="UTILITA_PAGINE_WIKI" Name="PAGINE_WIKI"/>
                </Constants>
            </Table>
            <Table Tablespace="USERS" Initial="65536.0" Temporary="false" Name="Sec_Dec_Menuutente">
                <Columns>
                    <Column PrimaryKey="true" Nullable="false" Type="VARCHAR2(100)" Position="0" DataLength="100" Name="Codmenuutente"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(20)" Position="1" DataLength="20" Name="Descrizionebreve"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(100)" Position="2" DataLength="100" Name="Descrizionelunga"/>
                    <Column PrimaryKey="false" Nullable="false" Type="NUMBER(38,0)" Position="3" DataLength="22" Name="Posizione"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(1)" Position="4" DataLength="1" Name="Flagvalido"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(10)" Position="5" DataLength="10" Name="Codtipovoce"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(100)" Position="6" DataLength="100" Name="Imghtml"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(200)" Position="7" DataLength="200" Name="Link"/>
                </Columns>
                <Indexes/>
                <Constraints>
                    <Constraint Type="PrimaryKey" Generated="false" Name="SEC_DEC_MENUUTENTE_PK">
                        <Columns>
                            <ConstraintColumn Name="CODMENUUTENTE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="ForeignKey" Generated="false" Table="SEC_DEC_TIPIVOCE" Name="SEC_DEC_MENUUTENTE_FK1">
                        <Columns>
                            <ConstraintColumn Name="CODTIPOVOCE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="flagvalido in ('S', 'N')" Generated="false" Name="SEC_DEC_MENUUTENTE_C1">
                        <Columns>
                            <ConstraintColumn Name="FLAGVALIDO"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;DESCRIZIONEBREVE&quot; IS NOT NULL" Generated="true" Name="SYS_C007042">
                        <Columns>
                            <ConstraintColumn Name="DESCRIZIONEBREVE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;DESCRIZIONELUNGA&quot; IS NOT NULL" Generated="true" Name="SYS_C007043">
                        <Columns>
                            <ConstraintColumn Name="DESCRIZIONELUNGA"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;POSIZIONE&quot; IS NOT NULL" Generated="true" Name="SYS_C007044">
                        <Columns>
                            <ConstraintColumn Name="POSIZIONE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;FLAGVALIDO&quot; IS NOT NULL" Generated="true" Name="SYS_C007045">
                        <Columns>
                            <ConstraintColumn Name="FLAGVALIDO"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;CODTIPOVOCE&quot; IS NOT NULL" Generated="true" Name="SYS_C007046">
                        <Columns>
                            <ConstraintColumn Name="CODTIPOVOCE"/>
                        </Columns>
                    </Constraint>
                </Constraints>
                <Triggers/>
                <ForeignKeyReferences>
                    <ForeignKeyReference TableName="Sec_Menuutenteruoli"/>
                </ForeignKeyReferences>
                <Grants/>
                <Partitions/>
                <Constants>
                    <Constant Value="PROFILO" Name="PROFILO"/>
                    <Constant Value="SEP" Name="SEPARATORE"/>
                </Constants>
            </Table>
            <Table Tablespace="USERS" Initial="65536.0" Temporary="false" Name="Sec_Dec_Ruoli">
                <Columns>
                    <Column PrimaryKey="true" Nullable="false" Type="VARCHAR2(10)" Position="0" DataLength="10" Name="Codruolo"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(20)" Position="1" DataLength="20" Name="Descrizionebreve"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(100)" Position="2" DataLength="100" Name="Descrizionelunga"/>
                    <Column PrimaryKey="false" Nullable="false" Type="NUMBER(38,0)" Position="3" DataLength="22" Name="Posizione"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(1)" Position="4" DataLength="1" Name="Flagvalido"/>
                </Columns>
                <Indexes/>
                <Constraints>
                    <Constraint Type="PrimaryKey" Generated="false" Name="SEC_DEC_RUOLI_PK">
                        <Columns>
                            <ConstraintColumn Name="CODRUOLO"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="flagvalido in ('S', 'N')" Generated="false" Name="SEC_DEC_RUOLI_C1">
                        <Columns>
                            <ConstraintColumn Name="FLAGVALIDO"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;CODRUOLO&quot; IS NOT NULL" Generated="true" Name="SYS_C007019">
                        <Columns>
                            <ConstraintColumn Name="CODRUOLO"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;DESCRIZIONEBREVE&quot; IS NOT NULL" Generated="true" Name="SYS_C007020">
                        <Columns>
                            <ConstraintColumn Name="DESCRIZIONEBREVE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;DESCRIZIONELUNGA&quot; IS NOT NULL" Generated="true" Name="SYS_C007021">
                        <Columns>
                            <ConstraintColumn Name="DESCRIZIONELUNGA"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;POSIZIONE&quot; IS NOT NULL" Generated="true" Name="SYS_C007022">
                        <Columns>
                            <ConstraintColumn Name="POSIZIONE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;FLAGVALIDO&quot; IS NOT NULL" Generated="true" Name="SYS_C007023">
                        <Columns>
                            <ConstraintColumn Name="FLAGVALIDO"/>
                        </Columns>
                    </Constraint>
                </Constraints>
                <Triggers/>
                <ForeignKeyReferences>
                    <ForeignKeyReference TableName="Sec_Funzioniruoli"/>
                    <ForeignKeyReference TableName="Sec_Menuruoli"/>
                    <ForeignKeyReference TableName="Sec_Menuutenteruoli"/>
                    <ForeignKeyReference TableName="Sec_Profili"/>
                </ForeignKeyReferences>
                <Grants/>
                <Partitions/>
                <Constants>
                    <Constant Value="A" Name="AMMINISTRATORE"/>
                    <Constant Value="C" Name="COMMERCIALE"/>
                    <Constant Value="E" Name="OSPITE"/>
                </Constants>
            </Table>
            <Table Tablespace="USERS" Initial="65536.0" Temporary="false" Name="Sec_Dec_Tipivoce">
                <Columns>
                    <Column PrimaryKey="true" Nullable="false" Type="VARCHAR2(10)" Position="0" DataLength="10" Name="Codtipovoce"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(20)" Position="1" DataLength="20" Name="Descrizionebreve"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(100)" Position="2" DataLength="100" Name="Descrizionelunga"/>
                    <Column PrimaryKey="false" Nullable="false" Type="NUMBER(38,0)" Position="3" DataLength="22" Name="Posizione"/>
                    <Column PrimaryKey="false" Nullable="false" Type="VARCHAR2(1)" Position="4" DataLength="1" Name="Flagvalido"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(1)" Position="5" DataLength="1" Name="Flagmenuutente"/>
                </Columns>
                <Indexes/>
                <Constraints>
                    <Constraint Type="PrimaryKey" Generated="false" Name="SEC_DEC_TIPIVOCE_PK">
                        <Columns>
                            <ConstraintColumn Name="CODTIPOVOCE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="flagvalido in ('S', 'N')" Generated="false" Name="SEC_DEC_TIPIVOCE_C1">
                        <Columns>
                            <ConstraintColumn Name="FLAGVALIDO"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;CODTIPOVOCE&quot; IS NOT NULL" Generated="true" Name="SYS_C007047">
                        <Columns>
                            <ConstraintColumn Name="CODTIPOVOCE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;DESCRIZIONEBREVE&quot; IS NOT NULL" Generated="true" Name="SYS_C007048">
                        <Columns>
                            <ConstraintColumn Name="DESCRIZIONEBREVE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;DESCRIZIONELUNGA&quot; IS NOT NULL" Generated="true" Name="SYS_C007049">
                        <Columns>
                            <ConstraintColumn Name="DESCRIZIONELUNGA"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;POSIZIONE&quot; IS NOT NULL" Generated="true" Name="SYS_C007050">
                        <Columns>
                            <ConstraintColumn Name="POSIZIONE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;FLAGVALIDO&quot; IS NOT NULL" Generated="true" Name="SYS_C007051">
                        <Columns>
                            <ConstraintColumn Name="FLAGVALIDO"/>
                        </Columns>
                    </Constraint>
                </Constraints>
                <Triggers/>
                <ForeignKeyReferences>
                    <ForeignKeyReference TableName="Sec_Dec_Menu"/>
                    <ForeignKeyReference TableName="Sec_Dec_Menuutente"/>
                </ForeignKeyReferences>
                <Grants/>
                <Partitions/>
                <Constants>
                    <Constant Value="SEPARATOR" Name="SEPARATORE"/>
                    <Constant Value="TITLE" Name="TITOLO"/>
                    <Constant Value="VOICE" Name="VOCE"/>
                </Constants>
            </Table>
            <Table Tablespace="USERS" Initial="65536.0" Temporary="false" Name="Sec_Funzioniruoli">
                <Columns>
                    <Column PrimaryKey="true" Nullable="false" Type="VARCHAR2(100)" Position="0" DataLength="100" Name="Codfunzione"/>
                    <Column PrimaryKey="true" Nullable="false" Type="VARCHAR2(10)" Position="1" DataLength="10" Name="Codruolo"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(1)" Position="2" DataLength="1" Name="Flagaccesso"/>
                </Columns>
                <Indexes/>
                <Constraints>
                    <Constraint Type="PrimaryKey" Generated="false" Name="SEC_FUNZIONIRUOLI_PK">
                        <Columns>
                            <ConstraintColumn Name="CODFUNZIONE"/>
                            <ConstraintColumn Name="CODRUOLO"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="ForeignKey" Generated="false" Table="SEC_DEC_FUNZIONI" Name="SEC_FUNZIONIRUOLI_FK1">
                        <Columns>
                            <ConstraintColumn Name="CODFUNZIONE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="ForeignKey" Generated="false" Table="SEC_DEC_RUOLI" Name="SEC_FUNZIONIRUOLI_FK2">
                        <Columns>
                            <ConstraintColumn Name="CODRUOLO"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="FLAGACCESSO in ('S', 'N')" Generated="false" Name="SEC_FUNZIONIRUOLI_CK1">
                        <Columns>
                            <ConstraintColumn Name="FLAGACCESSO"/>
                        </Columns>
                    </Constraint>
                </Constraints>
                <Triggers/>
                <ForeignKeyReferences/>
                <Grants/>
                <Partitions/>
                <Constants/>
            </Table>
            <Table Tablespace="USERS" Initial="65536.0" Temporary="false" Name="Sec_Menuruoli">
                <Columns>
                    <Column PrimaryKey="true" Nullable="false" Type="VARCHAR2(100)" Position="0" DataLength="100" Name="Codmenu"/>
                    <Column PrimaryKey="true" Nullable="false" Type="VARCHAR2(10)" Position="1" DataLength="10" Name="Codruolo"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(1)" Position="2" DataLength="1" Name="Flagaccesso"/>
                </Columns>
                <Indexes/>
                <Constraints>
                    <Constraint Type="PrimaryKey" Generated="false" Name="SEC_MENURUOLI_PK">
                        <Columns>
                            <ConstraintColumn Name="CODMENU"/>
                            <ConstraintColumn Name="CODRUOLO"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="ForeignKey" Generated="false" Table="SEC_DEC_MENU" Name="SEC_MENURUOLI_FK1">
                        <Columns>
                            <ConstraintColumn Name="CODMENU"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="ForeignKey" Generated="false" Table="SEC_DEC_RUOLI" Name="SEC_MENURUOLI_FK2">
                        <Columns>
                            <ConstraintColumn Name="CODRUOLO"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="FLAGACCESSO in ('S', 'N')" Generated="false" Name="SEC_MENURUOLI_CK1">
                        <Columns>
                            <ConstraintColumn Name="FLAGACCESSO"/>
                        </Columns>
                    </Constraint>
                </Constraints>
                <Triggers/>
                <ForeignKeyReferences/>
                <Grants/>
                <Partitions/>
                <Constants/>
            </Table>
            <Table Tablespace="USERS" Initial="65536.0" Temporary="false" Name="Sec_Menuutenteruoli">
                <Columns>
                    <Column PrimaryKey="true" Nullable="false" Type="VARCHAR2(100)" Position="0" DataLength="100" Name="Codmenuutente"/>
                    <Column PrimaryKey="true" Nullable="false" Type="VARCHAR2(10)" Position="1" DataLength="10" Name="Codruolo"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(1)" Position="2" DataLength="1" Name="Flagaccesso"/>
                </Columns>
                <Indexes/>
                <Constraints>
                    <Constraint Type="PrimaryKey" Generated="false" Name="SEC_MENUUTENTERUOLI_PK">
                        <Columns>
                            <ConstraintColumn Name="CODMENUUTENTE"/>
                            <ConstraintColumn Name="CODRUOLO"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="ForeignKey" Generated="false" Table="SEC_DEC_MENUUTENTE" Name="SEC_MENUUTENTERUOLI_FK1">
                        <Columns>
                            <ConstraintColumn Name="CODMENUUTENTE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="ForeignKey" Generated="false" Table="SEC_DEC_RUOLI" Name="SEC_MENUUTENTERUOLI_FK2">
                        <Columns>
                            <ConstraintColumn Name="CODRUOLO"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="FLAGACCESSO in ('S', 'N')" Generated="false" Name="SEC_MENUUTENTERUOLI_CK1">
                        <Columns>
                            <ConstraintColumn Name="FLAGACCESSO"/>
                        </Columns>
                    </Constraint>
                </Constraints>
                <Triggers/>
                <ForeignKeyReferences/>
                <Grants/>
                <Partitions/>
                <Constants/>
            </Table>
            <Table Tablespace="USERS" Initial="65536.0" Temporary="false" Name="Sec_Profili">
                <Columns>
                    <Column PrimaryKey="true" Nullable="false" Type="NUMBER(38,0)" Position="0" DataLength="22" Name="Idprofilo"/>
                    <Column PrimaryKey="false" Nullable="true" Type="NUMBER(38,0)" Position="1" DataLength="22" Name="Idutente"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(10)" Position="2" DataLength="10" Name="Codruolo"/>
                    <Column PrimaryKey="false" Nullable="false" Type="DATE" Position="3" DataLength="7" Name="Datainizio"/>
                    <Column PrimaryKey="false" Nullable="true" Type="DATE" Position="4" DataLength="7" Name="Datafine"/>
                </Columns>
                <Indexes/>
                <Constraints>
                    <Constraint Type="PrimaryKey" Generated="false" Name="SEC_PROFILI_PK">
                        <Columns>
                            <ConstraintColumn Name="IDPROFILO"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="ForeignKey" Generated="false" Table="SEC_UTENTI" Name="SEC_PROFILI_FK1">
                        <Columns>
                            <ConstraintColumn Name="IDUTENTE"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="ForeignKey" Generated="false" Table="SEC_DEC_RUOLI" Name="SEC_PROFILI_FK2">
                        <Columns>
                            <ConstraintColumn Name="CODRUOLO"/>
                        </Columns>
                    </Constraint>
                    <Constraint Type="Check" SearchCondition="&quot;DATAINIZIO&quot; IS NOT NULL" Generated="true" Name="SYS_C007041">
                        <Columns>
                            <ConstraintColumn Name="DATAINIZIO"/>
                        </Columns>
                    </Constraint>
                </Constraints>
                <Triggers/>
                <ForeignKeyReferences/>
                <Grants/>
                <Partitions/>
                <Constants/>
            </Table>
            <Table Tablespace="USERS" Initial="65536.0" Temporary="false" Name="Sec_Utenti">
                <Columns>
                    <Column PrimaryKey="true" Nullable="false" Type="NUMBER(38,0)" Position="0" DataLength="22" Name="Idutente"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(100)" Position="1" DataLength="100" Name="Nome"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(100)" Position="2" DataLength="100" Name="Cognome"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(10)" Position="3" DataLength="10" Name="Userid"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(10)" Position="4" DataLength="10" Name="Password"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(100)" Position="5" DataLength="100" Name="Email"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(100)" Position="6" DataLength="100" Name="Emailpassword"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(5)" Position="7" DataLength="5" Name="Locale"/>
                    <Column PrimaryKey="false" Nullable="true" Type="BLOB" Position="8" DataLength="4000" Name="Foto"/>
                </Columns>
                <Indexes/>
                <Constraints>
                    <Constraint Type="PrimaryKey" Generated="false" Name="SEC_UTENTI_PK">
                        <Columns>
                            <ConstraintColumn Name="IDUTENTE"/>
                        </Columns>
                    </Constraint>
                </Constraints>
                <Triggers/>
                <ForeignKeyReferences>
                    <ForeignKeyReference TableName="Sec_Profili"/>
                </ForeignKeyReferences>
                <Grants/>
                <Partitions/>
                <Constants/>
            </Table>
            <Table Tablespace="USERS" Initial="65536.0" Temporary="false" Name="Wiki_Pagine">
                <Columns>
                    <Column PrimaryKey="true" Nullable="false" Type="VARCHAR2(30)" Position="0" DataLength="30" Name="Codpagina"/>
                    <Column PrimaryKey="false" Nullable="true" Type="NUMBER(38,0)" Position="1" DataLength="22" Name="Posizione"/>
                    <Column PrimaryKey="false" Nullable="true" Type="VARCHAR2(100)" Position="2" DataLength="100" Name="Titolo"/>
                    <Column PrimaryKey="false" Nullable="true" Type="CLOB" Position="3" DataLength="372" Name="Documento"/>
                </Columns>
                <Indexes/>
                <Constraints>
                    <Constraint Type="PrimaryKey" Generated="false" Name="WIKI_PAGINE_PK">
                        <Columns>
                            <ConstraintColumn Name="CODPAGINA"/>
                        </Columns>
                    </Constraint>
                </Constraints>
                <Triggers/>
                <ForeignKeyReferences/>
                <Grants/>
                <Partitions/>
                <Constants/>
            </Table>
        </Tables>
        <Views>
            <View Name="View_Batch_Crontrigger">
                <Source>select c."IDCRONTRIGGER",c."IDJOB",c."MINUTI",c."ORE",c."GIORNODELMESE",c."MESE",c."GIORNODELLASETTIMANA",
       Jobname,
       Groupname 
From Batch_Crontrigger c, batch_job j
where c.idJob = j.idJob</Source>
                <Columns>
                    <Column Nullable="false" Type="NUMBER(38,0)" Position="0" DataLength="22" Name="Idcrontrigger"/>
                    <Column Nullable="true" Type="NUMBER(38,0)" Position="1" DataLength="22" Name="Idjob"/>
                    <Column Nullable="false" Type="VARCHAR2(50)" Position="2" DataLength="50" Name="Minuti"/>
                    <Column Nullable="false" Type="VARCHAR2(50)" Position="3" DataLength="50" Name="Ore"/>
                    <Column Nullable="false" Type="VARCHAR2(50)" Position="4" DataLength="50" Name="Giornodelmese"/>
                    <Column Nullable="false" Type="VARCHAR2(10)" Position="5" DataLength="10" Name="Mese"/>
                    <Column Nullable="false" Type="VARCHAR2(10)" Position="6" DataLength="10" Name="Giornodellasettimana"/>
                    <Column Nullable="true" Type="VARCHAR2(50)" Position="7" DataLength="50" Name="Jobname"/>
                    <Column Nullable="true" Type="VARCHAR2(50)" Position="8" DataLength="50" Name="Groupname"/>
                </Columns>
                <Triggers/>
                <Constants/>
            </View>
            <View Name="View_Clienti">
                <Source>select c."IDCLIENTE",c."RAGIONESOCIALE",c."INDIRIZZO",c."CODTIPOCLIENTE",c."PARTITAIVA",c."CODICEFISCALE",c."DATAULTIMOACQUISTO",c."NOTE",
        CASE 
          WHEN sysdate - dataultimoacquisto &lt; 30 THEN 'G'
          WHEN sysdate - dataultimoacquisto &lt; 60 THEN 'Y'
          ELSE 'R' END stato
  from clienti c</Source>
                <Columns>
                    <Column Nullable="false" Type="NUMBER(38,0)" Position="0" DataLength="22" Name="Idcliente"/>
                    <Column Nullable="true" Type="VARCHAR2(100)" Position="1" DataLength="100" Name="Ragionesociale"/>
                    <Column Nullable="true" Type="VARCHAR2(100)" Position="2" DataLength="100" Name="Indirizzo"/>
                    <Column Nullable="true" Type="VARCHAR2(10)" Position="3" DataLength="10" Name="Codtipocliente"/>
                    <Column Nullable="true" Type="VARCHAR2(16)" Position="4" DataLength="16" Name="Partitaiva"/>
                    <Column Nullable="true" Type="VARCHAR2(16)" Position="5" DataLength="16" Name="Codicefiscale"/>
                    <Column Nullable="true" Type="DATE" Position="6" DataLength="7" Name="Dataultimoacquisto"/>
                    <Column Nullable="true" Type="VARCHAR2(1000)" Position="7" DataLength="1000" Name="Note"/>
                    <Column Nullable="true" Type="CHAR(1)" Position="8" DataLength="1" Name="Stato"/>
                </Columns>
                <Triggers/>
                <Constants/>
            </View>
        </Views>
        <Packages>
            <Package Name="LIB">
                <SourceSpec>PACKAGE LIB AS

  Function BooleanToChar (Valore In Boolean) Return Varchar2;
  Function CharToBoolean (Valore In Varchar2) Return Boolean;

  Function CharToDate (Valore In varchar2) Return date;

  function getRicerca (Stringa in varchar2) return varchar;
  Function getAsciiStr(inStringa In Varchar2, inReplace in Varchar2 default ' ') Return Varchar2;

End;</SourceSpec>
                <SourceBody>PACKAGE BODY LIB AS

  Function BooleanToChar (Valore In Boolean) Return Varchar2 Is
    Begin
      If Valore Is Null Then
        Return Null;
      Elsif Valore then
        Return 'S';
      Else
        Return 'N';
      end if;
    End;

  Function CharToBoolean (Valore In Varchar2) Return Boolean Is
    Begin
      If Valore Is Null Then
        Return Null;
      Elsif Valore = 'S' then
        Return true;
      Else
        Return false;
      end if;
    End;

  Function CharToDate (Valore In varchar2) Return date is
    Begin
      return to_date(Valore, 'dd/mm/yyyy');

    Exception
      When Others Then
        return null;
    end;

  function getRicerca (Stringa in varchar2) return varchar is
      i integer;
      Result varchar2(4096);

    Begin
       For i in 1..nvl(length(Stringa),0) Loop
          if ascii (substr(Stringa, i, 1)) between 48 And 57 Or
             ascii (substr(Stringa, i, 1)) between 65 And 90 Or
             ascii (substr(Stringa, i, 1)) between 97 And 122 then

             Result := Result || substr(Stringa, i, 1);
          end if;
       End Loop;

       Return Substr(Upper(Result), 1, 2048);
    End;


  Function getAsciiStr(inStringa In Varchar2, inReplace in Varchar2 default ' ') Return Varchar2 Is
    result Varchar2(2000) := '';
    chr Varchar2(10);
   
  Begin
    for i in 1..length(inStringa) Loop
      chr := substr (inStringa, i, 1);
      
      If ascii(chr) &lt;= 31 Or ascii(chr) &gt;= 128 then
        result := result || inReplace;
      Else 
        result := result || chr;
      End if;
    End Loop;
    
    return (Result);
  end;

End;</SourceBody>
                <Methods>
                    <Method Name="Booleantochar" Type="FUNCTION" Overload="0">
                        <Arguments>
                            <Argument Type="VARCHAR2" InOut="OUT" Position="0"/>
                            <Argument Name="Valore" Type="PL/SQL BOOLEAN" InOut="IN" Position="1"/>
                        </Arguments>
                    </Method>
                    <Method Name="Chartoboolean" Type="FUNCTION" Overload="0">
                        <Arguments>
                            <Argument Type="PL/SQL BOOLEAN" InOut="OUT" Position="0"/>
                            <Argument Name="Valore" Type="VARCHAR2" InOut="IN" Position="1"/>
                        </Arguments>
                    </Method>
                    <Method Name="Chartodate" Type="FUNCTION" Overload="0">
                        <Arguments>
                            <Argument Type="DATE" InOut="OUT" Position="0"/>
                            <Argument Name="Valore" Type="VARCHAR2" InOut="IN" Position="1"/>
                        </Arguments>
                    </Method>
                    <Method Name="Getasciistr" Type="FUNCTION" Overload="0">
                        <Arguments>
                            <Argument Type="VARCHAR2" InOut="OUT" Position="0"/>
                            <Argument Name="Instringa" Type="VARCHAR2" InOut="IN" Position="1"/>
                            <Argument Name="Inreplace" Type="VARCHAR2" InOut="IN" Position="2"/>
                        </Arguments>
                    </Method>
                    <Method Name="Getricerca" Type="FUNCTION" Overload="0">
                        <Arguments>
                            <Argument Type="VARCHAR2" InOut="OUT" Position="0"/>
                            <Argument Name="Stringa" Type="VARCHAR2" InOut="IN" Position="1"/>
                        </Arguments>
                    </Method>
                </Methods>
            </Package>
            <Package Name="LIB_CALENDARIO">
                <SourceSpec>package lib_calendario is

  LUNEDI constant date := to_date('01/01/2001', 'dd/mm/yyyy');
  PATRONO constant varchar2(6) := '04/10/';

  FESTIVO constant varchar2(10) := 'FEST';
  FERIALE constant varchar2(10) := 'FER';
  PREFESTIVO constant varchar2(10) := 'PRE';

  Function getPasqua(anno in integer) return date;

  -- Ritorna il giorno della settimana (0 = Lunedì)
  Function getDayOfWeek(inGiorno in date) return integer;

  Function getTipoGiorno (inGiorno in date) return varchar2;
  Function isFestivo (inGiorno in date) return boolean;

  Function isLunedi(inData in date) return boolean;
  Function isMartedi(inData in date) return boolean;
  Function isMercoledi(inData in date) return boolean;
  Function isGiovedi(inData in date) return boolean;
  Function isVenerdi(inData in date) return boolean;
  Function isSabato(inData in date) return boolean;
  Function isDomenica(inData in date) return boolean;

end;</SourceSpec>
                <SourceBody>package body lib_calendario is

  -- Recupera il giorno di Pasqua
  Function getPasqua(anno in integer) return date is
    C integer;
    N integer;
    K integer;
    I integer;
    J integer;
    L integer;

    Mese integer;
    Giorno integer;
  begin

     C := trunc(Anno / 100);
     N := Anno - 19 * trunc(Anno / 19);
     K := trunc((C - 17) / 25);
     I := C - trunc(C / 4) - trunc((C - K) / 3) + 19 * N + 15;
     I := I - 30 * trunc(I / 30);
     I := I - trunc(I / 28) * (1 - trunc(I / 28) * trunc(29 / (I + 1)) * trunc((21 - N) / 11));
     J := Anno + trunc(Anno / 4) + I + 2 - C + trunc(C / 4);
     J := J - 7 * trunc(J / 7);
     L := I - J;
     Mese := 3 + trunc((L + 40) / 44);
     Giorno := L + 28 - 31 * trunc(Mese / 4);

     return to_date (Giorno || '/' || Mese || '/' || Anno, 'dd/mm/yyyy');
  End;

  Function getDayOfWeek(inGiorno in date) return integer is
    begin
      return mod (greatest(inGiorno, LUNEDI) - least(inGiorno, LUNEDI), 7);
    end;

  Function getTipoGiorno (inGiorno in date) return varchar2 is
    begin
      if isFestivo (inGiorno) then
        return FESTIVO;
      elsif isSabato(inGiorno) then
        return PREFESTIVO;
      else
        return FERIALE;
      end if;
    end;

  function isFestivo (inGiorno in date) return boolean is
      Giorno date := trunc(inGiorno);
      Anno varchar2(4) := to_char(inGiorno, 'yyyy');

    begin
      if isDomenica(Giorno) then         -- DOMENICA
        return true;
      elsif Giorno = to_date ('01/01/' || Anno, 'dd/mm/yyyy') then                    -- 01/01 Capodanno
        return true;
      elsif Giorno = to_date ('06/01/' || Anno, 'dd/mm/yyyy') then                    -- 01/06 Epifania
        return true;
      elsif Giorno = to_date ('25/04/' || Anno, 'dd/mm/yyyy') then                    -- 25/04
        return true;
      elsif Giorno = to_date ('01/05/' || Anno, 'dd/mm/yyyy') then                    -- 01/05
        return true;
      elsif Giorno = to_date ('02/06/' || Anno, 'dd/mm/yyyy') then                    -- 02/06 Festa della Repubblica
        return true;
      elsif Giorno = to_date ('15/08/' || Anno, 'dd/mm/yyyy') then                    -- 15/08 Ferragosto
        return true;
      --elsif Giorno = to_date (PATRONO || Anno, 'dd/mm/yyyy') then                     -- Patrono
      --  return true;
      elsif Giorno = to_date ('01/11/' || Anno, 'dd/mm/yyyy') then                    -- 01/11 Ognisanti
        return true;
      elsif Giorno = to_date ('08/12/' || Anno, 'dd/mm/yyyy') then                    -- 08/12 Immacolata concezione
        return true;
      elsif Giorno = to_date ('25/12/' || Anno, 'dd/mm/yyyy') then                    -- 25/12 Natale
        return true;
      elsif Giorno = to_date ('26/12/' || Anno, 'dd/mm/yyyy') then                    -- 26/12 Santo stefano
        return true;
      elsif Giorno = getPasqua(Anno) then                                             --       Pasqua
        return true;
      elsif Giorno = getPasqua(Anno) + 1 then                                         --       Lunedì dell'Angelo
        return true;
      else
        return false;
      end if;

    end;

  Function isLunedi(inData in date) return boolean is
    begin
      return getDayOfWeek(inData) = 0;
    end;

  Function isMartedi(inData in date) return boolean is
    begin
      return getDayOfWeek(inData) = 1;
    end;

  Function isMercoledi(inData in date) return boolean is
    begin
      return getDayOfWeek(inData) = 2;
    end;

  Function isGiovedi(inData in date) return boolean is
    begin
      return getDayOfWeek(inData) = 3;
    end;

  Function isVenerdi(inData in date) return boolean is
    begin
      return getDayOfWeek(inData) = 4;
    end;

  Function isSabato(inData in date) return boolean is
    begin
      return getDayOfWeek(inData) = 5;
    end;


  Function isDomenica(inData in date) return boolean is
    begin
      return getDayOfWeek(inData) = 6;
    end;

end;</SourceBody>
                <Methods>
                    <Method Name="Getdayofweek" Type="FUNCTION" Overload="0">
                        <Arguments>
                            <Argument Type="NUMBER" InOut="OUT" Position="0"/>
                            <Argument Name="Ingiorno" Type="DATE" InOut="IN" Position="1"/>
                        </Arguments>
                    </Method>
                    <Method Name="Getpasqua" Type="FUNCTION" Overload="0">
                        <Arguments>
                            <Argument Type="DATE" InOut="OUT" Position="0"/>
                            <Argument Name="Anno" Type="NUMBER" InOut="IN" Position="1"/>
                        </Arguments>
                    </Method>
                    <Method Name="Gettipogiorno" Type="FUNCTION" Overload="0">
                        <Arguments>
                            <Argument Type="VARCHAR2" InOut="OUT" Position="0"/>
                            <Argument Name="Ingiorno" Type="DATE" InOut="IN" Position="1"/>
                        </Arguments>
                    </Method>
                    <Method Name="Isdomenica" Type="FUNCTION" Overload="0">
                        <Arguments>
                            <Argument Type="PL/SQL BOOLEAN" InOut="OUT" Position="0"/>
                            <Argument Name="Indata" Type="DATE" InOut="IN" Position="1"/>
                        </Arguments>
                    </Method>
                    <Method Name="Isfestivo" Type="FUNCTION" Overload="0">
                        <Arguments>
                            <Argument Type="PL/SQL BOOLEAN" InOut="OUT" Position="0"/>
                            <Argument Name="Ingiorno" Type="DATE" InOut="IN" Position="1"/>
                        </Arguments>
                    </Method>
                    <Method Name="Isgiovedi" Type="FUNCTION" Overload="0">
                        <Arguments>
                            <Argument Type="PL/SQL BOOLEAN" InOut="OUT" Position="0"/>
                            <Argument Name="Indata" Type="DATE" InOut="IN" Position="1"/>
                        </Arguments>
                    </Method>
                    <Method Name="Islunedi" Type="FUNCTION" Overload="0">
                        <Arguments>
                            <Argument Type="PL/SQL BOOLEAN" InOut="OUT" Position="0"/>
                            <Argument Name="Indata" Type="DATE" InOut="IN" Position="1"/>
                        </Arguments>
                    </Method>
                    <Method Name="Ismartedi" Type="FUNCTION" Overload="0">
                        <Arguments>
                            <Argument Type="PL/SQL BOOLEAN" InOut="OUT" Position="0"/>
                            <Argument Name="Indata" Type="DATE" InOut="IN" Position="1"/>
                        </Arguments>
                    </Method>
                    <Method Name="Ismercoledi" Type="FUNCTION" Overload="0">
                        <Arguments>
                            <Argument Type="PL/SQL BOOLEAN" InOut="OUT" Position="0"/>
                            <Argument Name="Indata" Type="DATE" InOut="IN" Position="1"/>
                        </Arguments>
                    </Method>
                    <Method Name="Issabato" Type="FUNCTION" Overload="0">
                        <Arguments>
                            <Argument Type="PL/SQL BOOLEAN" InOut="OUT" Position="0"/>
                            <Argument Name="Indata" Type="DATE" InOut="IN" Position="1"/>
                        </Arguments>
                    </Method>
                    <Method Name="Isvenerdi" Type="FUNCTION" Overload="0">
                        <Arguments>
                            <Argument Type="PL/SQL BOOLEAN" InOut="OUT" Position="0"/>
                            <Argument Name="Indata" Type="DATE" InOut="IN" Position="1"/>
                        </Arguments>
                    </Method>
                </Methods>
            </Package>
            <Package Name="LIB_LOB">
                <SourceSpec>package lib_lob is
   -- Costanti
   Constchunksize Constant Integer := 16384;

   -- Definizione dei Tipi
   Type TRighe Is Table of varchar2(4096);

   -- Gestione dei LOB
   Procedure BLOB_To_Righe (InBLOB in BLOB, OutRighe out nocopy TRighe);
   Procedure CLOB_To_Righe (InCLOB in CLOB, OutRighe out nocopy TRighe);

   Procedure Righe_To_CLOB (InRighe in TRighe, OutCLOB in out NoCopy CLOB);
   Procedure Righe_To_BLOB (InRighe in TRighe, OutBLOB in out NoCopy BLOB);

   Function Righe_to_Varchar (InRighe in TRighe) return varchar2;
   Function CLOB_to_Varchar (InCLOB in CLOB) return varchar2;

end;</SourceSpec>
                <SourceBody>package body lib_lob is

   ----------------------
   -- Gestione dei LOB --
   ----------------------
   Procedure BLOB_To_Righe (InBLOB in BLOB, OutRighe out NoCopy TRighe) is
         AppBufferRaw raw(32767);
         BufferVarchar varchar2(32767);

         Chunksize integer := constChunksize;
         Posizione integer := 1;

         Inizio integer;                     -- Variabili relative alla gestione del buffer
         Lunghezza integer;
         Pos10 integer := Null;
         Pos13 integer := Null;

         Procedure AddRiga (InRiga in varchar2) is
            begin
               if InRiga is not null then
                  OutRighe.Extend(1);
                  OutRighe(OutRighe.count) := InRiga;
               end if;
            end;

      begin
         -- Inizializzazioni
         Posizione := 1;

         BufferVarchar := null;
         Inizio := 1;
         Pos10 := 0;
         Pos13 := 0;

         OutRighe := TRighe ();

         Loop
            if Pos10 = 0 and Pos13 = 0 then
               -- Se nel buffer corrente non ci sono piu' terminatori di linea aggiorno il Buffer
               DBMS_LOB.READ (InBLOB, Chunksize,  Posizione, AppBufferRaw);
               BufferVarchar := substr (BufferVarchar, Inizio) || utl_raw.cast_to_varchar2(AppBufferRaw);
               Posizione := Posizione + Chunksize;

               Inizio := 1;
               Pos10 := Instr(BufferVarchar, chr(10), Inizio);
               Pos13 := Instr(BufferVarchar, chr(13), Inizio);
            elsif Pos10 != 0 And Pos13 != 0 then
               Lunghezza := least (Pos10, Pos13) - Inizio;
               AddRiga (substr(BufferVarchar, Inizio, Lunghezza));

               Inizio := Inizio + Lunghezza + 1;
               Pos10 := Instr(BufferVarchar, chr(10), Inizio);
               Pos13 := Instr(BufferVarchar, chr(13), Inizio);
            elsif Pos10 = 0 then
               Lunghezza := Pos13 - Inizio;
               AddRiga (substr(BufferVarchar, Inizio, Lunghezza));

               Inizio := Inizio + Lunghezza + 1;
               Pos13 := Instr(BufferVarchar, chr(13), Inizio);
            elsif Pos13 = 0 then
               Lunghezza := Pos10 - Inizio;
               AddRiga (substr(BufferVarchar, Inizio, Lunghezza));

               Inizio := Inizio + Lunghezza + 1;
               Pos10 := Instr(BufferVarchar, chr(10), Inizio);
            end if;

         End Loop;

      exception
         when no_data_found then
            AddRiga (substr(BufferVarchar, Inizio));
      end BLOB_To_Righe;


   -- Legge da un campo CLOB e lo scrive in una collectio di varchar2
   Procedure CLOB_To_Righe (InCLOB in CLOB, OutRighe out NoCopy TRighe) is
         AppBufferVarchar varchar2(32767);
         BufferVarchar varchar2(32767);

         Chunksize integer := constChunksize;
         Posizione integer := 1;

         Inizio integer;                     -- Variabili relative alla gestione del buffer
         Lunghezza integer;
         Pos10 integer := Null;
         Pos13 integer := Null;

         Procedure AddRiga (InRiga in varchar2) is
            begin
               if InRiga is not null then
                  OutRighe.Extend(1);
                  OutRighe(OutRighe.count) := InRiga;
               end if;
            end;

      begin
         -- Inizializzazioni
         Posizione := 1;

         BufferVarchar := null;
         Inizio := 1;
         Pos10 := 0;
         Pos13 := 0;

         OutRighe := TRighe ();

         Loop
            if Pos10 = 0 and Pos13 = 0 then
               -- Se nel buffer corrente non ci sono piu' terminatori di linea aggiorno il Buffer
               DBMS_LOB.READ (InCLOB, Chunksize,  Posizione, AppBufferVarchar);
               BufferVarchar := substr (BufferVarchar, Inizio) || AppBufferVarchar;
               Posizione := Posizione + Chunksize;

               Inizio := 1;
               Pos10 := Instr(BufferVarchar, chr(10), Inizio);
               Pos13 := Instr(BufferVarchar, chr(13), Inizio);
            elsif Pos10 != 0 And Pos13 != 0 then
               Lunghezza := least (Pos10, Pos13) - Inizio;
               AddRiga (substr(BufferVarchar, Inizio, Lunghezza));

               Inizio := Inizio + Lunghezza + 1;
               Pos10 := Instr(BufferVarchar, chr(10), Inizio);
               Pos13 := Instr(BufferVarchar, chr(13), Inizio);
            elsif Pos10 = 0 then
               Lunghezza := Pos13 - Inizio;
               AddRiga (substr(BufferVarchar, Inizio, Lunghezza));

               Inizio := Inizio + Lunghezza + 1;
               Pos13 := Instr(BufferVarchar, chr(13), Inizio);
            elsif Pos13 = 0 then
               Lunghezza := Pos10 - Inizio;
               AddRiga (substr(BufferVarchar, Inizio, Lunghezza));

               Inizio := Inizio + Lunghezza + 1;
               Pos10 := Instr(BufferVarchar, chr(10), Inizio);
            end if;

         End Loop;

      exception
         when no_data_found then
            AddRiga (substr(BufferVarchar, Inizio));
      end CLOB_To_Righe;


   -- Legge una collection di varchar2 e lo scrive in un campo CLOB
   Procedure Righe_To_CLOB (InRighe in TRighe, OutCLOB in out NoCopy CLOB) is
         BufferVarchar varchar2(32767);
      begin
         if InRighe.count &gt;= 1 then
            BufferVarchar := InRighe(1);

            for i in 2..InRighe.count Loop
               if length(BufferVarchar || chr(13) || chr(10) || InRighe(i)) &gt; constChunkSize then
                  dbms_lob.WriteAppend (OutCLOB, length(BufferVarchar), BufferVarchar);
                  BufferVarchar := chr(13) || chr(10) || InRighe(i);
               else
                  BufferVarchar := BufferVarchar || chr(13) || chr(10) || InRighe(i);
               end if;
            end Loop;

            dbms_lob.WriteAppend (OutCLOB, length(BufferVarchar) + 2, BufferVarchar || chr(13) || chr(10));
         end if;
      end Righe_To_CLOB;


   -- Legge una collection di varchar2 e lo scrive in un campo BLOB
   Procedure Righe_To_BLOB (InRighe in TRighe, OutBLOB in out NoCopy BLOB) is
         BufferVarchar varchar2(32767);
         BufferRaw raw(32767);
      begin
         if InRighe.count &gt;= 1 then
            BufferVarchar := InRighe(1);

            for i in 2..InRighe.count Loop
               if length(BufferVarchar || chr(13) || chr(10) || InRighe(i)) &gt; constChunkSize then
                  BufferRaw := utl_raw.cast_to_raw(BufferVarchar);
                  dbms_lob.WriteAppend (OutBLOB, utl_raw.length(BufferRaw), BufferRaw);

                  BufferVarchar := chr(13) || chr(10) || InRighe(i);
               else
                  BufferVarchar := BufferVarchar || chr(13) || chr(10) || InRighe(i);
               end if;
            end Loop;

            BufferRaw := utl_raw.cast_to_raw(BufferVarchar || chr(13) || chr(10));
            dbms_lob.WriteAppend (OutBLOB, utl_raw.length(BufferRaw), BufferRaw);
         end if;
      end Righe_To_BLOB;

  Function CLOB_to_Varchar (InRighe in TRighe) return varchar2 is
      result varchar2(4000) := '';
    begin
      for i in InRighe.first.. InRighe.last Loop
        exit when length(result) + length(InRighe (i)) &gt; 4000;
        result := result || InRighe (i);
      end Loop;
    end;

  Function Righe_to_Varchar (InRighe in TRighe) return varchar2 is
      result varchar2(4000) := '';
    begin
      dbms_output.put_line (InRighe.count);

      for i in InRighe.first.. InRighe.last Loop
        exit when nvl(length(result), 0) + nvl(length(InRighe (i)), 0) &gt; 4000;
        result := result || InRighe (i);
      end Loop;

      return result;
    end;

  Function CLOB_to_Varchar (InCLOB in CLOB) return varchar2 is
      righe TRighe;
    begin
      clob_to_righe (InCLOB, righe);
      return Righe_to_Varchar (righe);
    end;
end;</SourceBody>
                <Methods>
                    <Method Name="Blob_To_Righe" Type="PROCEDURE" Overload="0">
                        <Arguments>
                            <Argument Name="Inblob" Type="BLOB" InOut="IN" Position="1"/>
                            <Argument Name="Outrighe" Type="TABLE" TypeName="LIB_LOB" InOut="OUT" Position="2"/>
                        </Arguments>
                    </Method>
                    <Method Name="Clob_To_Righe" Type="PROCEDURE" Overload="0">
                        <Arguments>
                            <Argument Name="Inclob" Type="CLOB" InOut="IN" Position="1"/>
                            <Argument Name="Outrighe" Type="TABLE" TypeName="LIB_LOB" InOut="OUT" Position="2"/>
                        </Arguments>
                    </Method>
                    <Method Name="Clob_To_Varchar" Type="FUNCTION" Overload="0">
                        <Arguments>
                            <Argument Type="VARCHAR2" InOut="OUT" Position="0"/>
                            <Argument Name="Inclob" Type="CLOB" InOut="IN" Position="1"/>
                        </Arguments>
                    </Method>
                    <Method Name="Righe_To_Blob" Type="PROCEDURE" Overload="0">
                        <Arguments>
                            <Argument Name="Inrighe" Type="TABLE" TypeName="LIB_LOB" InOut="IN" Position="1"/>
                            <Argument Name="Outblob" Type="BLOB" InOut="INOUT" Position="2"/>
                        </Arguments>
                    </Method>
                    <Method Name="Righe_To_Clob" Type="PROCEDURE" Overload="0">
                        <Arguments>
                            <Argument Name="Inrighe" Type="TABLE" TypeName="LIB_LOB" InOut="IN" Position="1"/>
                            <Argument Name="Outclob" Type="CLOB" InOut="INOUT" Position="2"/>
                        </Arguments>
                    </Method>
                    <Method Name="Righe_To_Varchar" Type="FUNCTION" Overload="0">
                        <Arguments>
                            <Argument Type="VARCHAR2" InOut="OUT" Position="0"/>
                            <Argument Name="Inrighe" Type="TABLE" TypeName="LIB_LOB" InOut="IN" Position="1"/>
                        </Arguments>
                    </Method>
                </Methods>
            </Package>
            <Package Name="LIB_LOGGING">
                <SourceSpec>Package Lib_Logging Is
  INFO Constant Varchar2(1) := 'I';
  WARN Constant Varchar2(1) := 'W';
  ERR Constant Varchar2(1) := 'E';


  procedure startLog (inIdlogelaborazione in integer, inElaborazione in varchar2);
  procedure startLog (inIdlogelaborazione in integer, inElaborazione in varchar2, inIdutente in integer);

  procedure abortLog (inIdlogelaborazione in integer);
  procedure endLog (inIdlogelaborazione in integer);

  procedure addInformation (inIdlogelaborazione in integer, inMessaggio in varchar2);
  procedure addInformation (inIdlogelaborazione in integer, inMessaggio in varchar2, inPercentuale in integer);
  procedure addWarning (inIdlogelaborazione in integer, inMessaggio in varchar2);
  procedure addWarning (inIdlogelaborazione in integer, inMessaggio in varchar2, inPercentuale in integer);
  procedure addError (inIdlogelaborazione in integer, inMessaggio in varchar2);
  procedure addError (inIdlogelaborazione in integer, inMessaggio in varchar2, inPercentuale in integer);

end;</SourceSpec>
                <SourceBody>package body Lib_Logging is

  procedure startLog (inIdlogelaborazione in integer, inElaborazione in varchar2) is
      AppLogelaborazioni Logelaborazioni%rowtype;

    begin
      startLog (inIdlogelaborazione, inElaborazione, null);
    end;

  procedure startLog (inIdlogelaborazione in integer, inElaborazione in varchar2, inIdutente in integer) is
      AppLogelaborazioni Logelaborazioni%rowtype;

    begin
      AppLogelaborazioni.Idlogelaborazione := inIdlogelaborazione;
      AppLogelaborazioni.datainizio := sysdate;
      AppLogelaborazioni.dataaggiornamento := sysdate;
      AppLogelaborazioni.idutente := inIdutente;
      AppLogelaborazioni.elaborazione := inElaborazione;
      AppLogelaborazioni.percentuale := 0;

      dao_insert.logelaborazioni(AppLogelaborazioni);
      addInformation(AppLogelaborazioni.Idlogelaborazione, 'Inizio elaborazione');
    end;

  procedure abortLog (inIdlogelaborazione in integer) is
      AppLogelaborazioni Logelaborazioni%rowtype;

    begin
      Select * Into AppLogelaborazioni from Logelaborazioni where Idlogelaborazione = inIdlogelaborazione;

      AppLogelaborazioni.Datafine := sysdate;
      AppLogelaborazioni.dataaggiornamento := sysdate;
      AppLogelaborazioni.Stato := 'KO';
      AppLogelaborazioni.percentuale := 100;

      dao_update.logelaborazioni(AppLogelaborazioni, AppLogelaborazioni);
      addInformation(AppLogelaborazioni.Idlogelaborazione, 'Elaborazione terminata con errori');
    end;


  procedure endLog (inIdlogelaborazione in integer) is
      AppLogelaborazioni Logelaborazioni%rowtype;

    begin
      Select * Into AppLogelaborazioni from Logelaborazioni where Idlogelaborazione = inIdlogelaborazione;

      AppLogelaborazioni.Datafine := sysdate;
      AppLogelaborazioni.dataaggiornamento := sysdate;
      AppLogelaborazioni.Stato := 'OK';
      AppLogelaborazioni.percentuale := 100;

      dao_update.logelaborazioni(AppLogelaborazioni, AppLogelaborazioni);
      addInformation(AppLogelaborazioni.Idlogelaborazione, 'Fine elaborazione');
    end;

  procedure addLog (inIdlogelaborazione in integer, inStato in varchar2, inMessaggio in varchar2, inPercentuale in integer) is
     appLogelaborazioniDettaglio LogelaborazioniDettaglio%rowtype;
     AppLogelaborazioni Logelaborazioni%rowtype;

    begin
      appLogelaborazioniDettaglio.Idlogelaborazionedettaglio := dao_sequences.seq_idlogelaborazionedettaglio;
      appLogelaborazioniDettaglio.Idlogelaborazione := inIdlogelaborazione;
      appLogelaborazioniDettaglio.Data := sysdate;
      appLogelaborazioniDettaglio.Stato := inStato;
      appLogelaborazioniDettaglio.Messaggio := substr(inMessaggio, 1, 2000);

      dao_insert.logelaborazionidettaglio(appLogelaborazioniDettaglio);

      Update Logelaborazioni
      Set messaggio = inMessaggio,
          percentuale = nvl(inPercentuale, percentuale)
      Where Idlogelaborazione = inIdlogelaborazione;
    End;


  procedure addInformation (inIdlogelaborazione in integer, inMessaggio in varchar2) is
    begin
      addInformation (inIdlogelaborazione, inMessaggio, null);
    end;

  procedure addInformation (inIdlogelaborazione in integer, inMessaggio in varchar2, inPercentuale in integer) is
    Begin
      addLog (inIdlogelaborazione, INFO, inMessaggio, inPercentuale);
    end;

  procedure addWarning (inIdlogelaborazione in integer, inMessaggio in varchar2) is
    begin
      addWarning (inIdlogelaborazione, inMessaggio, null);
    end;

  procedure addWarning (inIdlogelaborazione in integer, inMessaggio in varchar2, inPercentuale in integer) is
    Begin
      addLog (inIdlogelaborazione, WARN, inMessaggio, inPercentuale);
    end;

  procedure addError (inIdlogelaborazione in integer, inMessaggio in varchar2) is
    begin
      addError (inIdlogelaborazione, inMessaggio, null);
    end;

  procedure addError (inIdlogelaborazione in integer, inMessaggio in varchar2, inPercentuale in integer) is
    Begin
      addLog (inIdlogelaborazione, ERR, inMessaggio, inPercentuale);
    end;

end;</SourceBody>
                <Methods>
                    <Method Name="Abortlog" Type="PROCEDURE" Overload="0">
                        <Arguments>
                            <Argument Name="Inidlogelaborazione" Type="NUMBER" InOut="IN" Position="1"/>
                        </Arguments>
                    </Method>
                    <Method Name="Adderror" Type="PROCEDURE" Overload="1">
                        <Arguments>
                            <Argument Name="Inidlogelaborazione" Type="NUMBER" InOut="IN" Position="1"/>
                            <Argument Name="Inmessaggio" Type="VARCHAR2" InOut="IN" Position="2"/>
                        </Arguments>
                    </Method>
                    <Method Name="Adderror" Type="PROCEDURE" Overload="2">
                        <Arguments>
                            <Argument Name="Inidlogelaborazione" Type="NUMBER" InOut="IN" Position="1"/>
                            <Argument Name="Inmessaggio" Type="VARCHAR2" InOut="IN" Position="2"/>
                            <Argument Name="Inpercentuale" Type="NUMBER" InOut="IN" Position="3"/>
                        </Arguments>
                    </Method>
                    <Method Name="Addinformation" Type="PROCEDURE" Overload="1">
                        <Arguments>
                            <Argument Name="Inidlogelaborazione" Type="NUMBER" InOut="IN" Position="1"/>
                            <Argument Name="Inmessaggio" Type="VARCHAR2" InOut="IN" Position="2"/>
                        </Arguments>
                    </Method>
                    <Method Name="Addinformation" Type="PROCEDURE" Overload="2">
                        <Arguments>
                            <Argument Name="Inidlogelaborazione" Type="NUMBER" InOut="IN" Position="1"/>
                            <Argument Name="Inmessaggio" Type="VARCHAR2" InOut="IN" Position="2"/>
                            <Argument Name="Inpercentuale" Type="NUMBER" InOut="IN" Position="3"/>
                        </Arguments>
                    </Method>
                    <Method Name="Addwarning" Type="PROCEDURE" Overload="1">
                        <Arguments>
                            <Argument Name="Inidlogelaborazione" Type="NUMBER" InOut="IN" Position="1"/>
                            <Argument Name="Inmessaggio" Type="VARCHAR2" InOut="IN" Position="2"/>
                        </Arguments>
                    </Method>
                    <Method Name="Addwarning" Type="PROCEDURE" Overload="2">
                        <Arguments>
                            <Argument Name="Inidlogelaborazione" Type="NUMBER" InOut="IN" Position="1"/>
                            <Argument Name="Inmessaggio" Type="VARCHAR2" InOut="IN" Position="2"/>
                            <Argument Name="Inpercentuale" Type="NUMBER" InOut="IN" Position="3"/>
                        </Arguments>
                    </Method>
                    <Method Name="Endlog" Type="PROCEDURE" Overload="0">
                        <Arguments>
                            <Argument Name="Inidlogelaborazione" Type="NUMBER" InOut="IN" Position="1"/>
                        </Arguments>
                    </Method>
                    <Method Name="Startlog" Type="PROCEDURE" Overload="1">
                        <Arguments>
                            <Argument Name="Inidlogelaborazione" Type="NUMBER" InOut="IN" Position="1"/>
                            <Argument Name="Inelaborazione" Type="VARCHAR2" InOut="IN" Position="2"/>
                        </Arguments>
                    </Method>
                    <Method Name="Startlog" Type="PROCEDURE" Overload="2">
                        <Arguments>
                            <Argument Name="Inidlogelaborazione" Type="NUMBER" InOut="IN" Position="1"/>
                            <Argument Name="Inelaborazione" Type="VARCHAR2" InOut="IN" Position="2"/>
                            <Argument Name="Inidutente" Type="NUMBER" InOut="IN" Position="3"/>
                        </Arguments>
                    </Method>
                </Methods>
            </Package>
            <Package Name="LIB_SICUREZZA">
                <SourceSpec>Package Lib_Sicurezza As

  Function GetruoliFunzione (InCodfunzione In Varchar2) Return Varchar2;
  Function GetruoliMenu (InCodMenu In Varchar2) Return Varchar2;
  Function GetruoliMenuUtente (InCodMenuUtente In Varchar2) Return Varchar2;

End;</SourceSpec>
                <SourceBody>Package Body Lib_Sicurezza As

  Function GetruoliFunzione (InCodFunzione In Varchar2) Return Varchar2 is
      Result Varchar2(1000);

      Cursor Cruoli Is
        Select R.Descrizionebreve
        From Sec_Dec_Ruoli R, Sec_Funzioniruoli Fr
        Where R.Codruolo = Fr.Codruolo And
              Fr.Codfunzione = Incodfunzione And
              Fr.Flagaccesso = 'S'
        Order by 1;

    Begin
      For Rruoli In Cruoli Loop
        If Result Is Null Then
          Result := Result || Rruoli.Descrizionebreve;
        Else
          Result := Result || ', ' || Rruoli.Descrizionebreve;
        End If;
      End Loop;

      return Result;
    End;
    
  Function GetruoliMenu (InCodMenu In Varchar2) Return Varchar2 is
      Result Varchar2(1000);

      Cursor Cruoli Is
        Select R.Descrizionebreve
        From Sec_Dec_Ruoli R, Sec_Menuruoli mr
        Where R.Codruolo = mr.Codruolo And
              mr.CodMenu = IncodMenu And
              mr.Flagaccesso = 'S'
        Order by 1;

    Begin
      For Rruoli In Cruoli Loop
        If Result Is Null Then
          Result := Result || Rruoli.Descrizionebreve;
        Else
          Result := Result || ', ' || Rruoli.Descrizionebreve;
        End If;
      End Loop;

      return Result;
    End;    

  Function GetruoliMenuUtente (InCodMenuUtente In Varchar2) Return Varchar2 is
      Result Varchar2(1000);

      Cursor Cruoli Is
        Select R.Descrizionebreve
        From Sec_Dec_Ruoli R, Sec_MenuUtenteruoli mr
        Where R.Codruolo = mr.Codruolo And
              mr.CodMenuUtente = IncodMenuUtente And
              mr.Flagaccesso = 'S'
        Order by 1;

    Begin
      For Rruoli In Cruoli Loop
        If Result Is Null Then
          Result := Result || Rruoli.Descrizionebreve;
        Else
          Result := Result || ', ' || Rruoli.Descrizionebreve;
        End If;
      End Loop;

      return Result;
    End;  
End;</SourceBody>
                <Methods>
                    <Method Name="Getruolifunzione" Type="FUNCTION" Overload="0">
                        <Arguments>
                            <Argument Type="VARCHAR2" InOut="OUT" Position="0"/>
                            <Argument Name="Incodfunzione" Type="VARCHAR2" InOut="IN" Position="1"/>
                        </Arguments>
                    </Method>
                    <Method Name="Getruolimenu" Type="FUNCTION" Overload="0">
                        <Arguments>
                            <Argument Type="VARCHAR2" InOut="OUT" Position="0"/>
                            <Argument Name="Incodmenu" Type="VARCHAR2" InOut="IN" Position="1"/>
                        </Arguments>
                    </Method>
                    <Method Name="Getruolimenuutente" Type="FUNCTION" Overload="0">
                        <Arguments>
                            <Argument Type="VARCHAR2" InOut="OUT" Position="0"/>
                            <Argument Name="Incodmenuutente" Type="VARCHAR2" InOut="IN" Position="1"/>
                        </Arguments>
                    </Method>
                </Methods>
            </Package>
        </Packages>
        <Sequences>
            <Sequence Name="Job_Seq_Idcrontrigger"/>
            <Sequence Name="Job_Seq_Idjob"/>
            <Sequence Name="Sec_Seq_Idutente"/>
            <Sequence Name="Seq_Idcliente"/>
            <Sequence Name="Seq_Idlogelaborazione"/>
            <Sequence Name="Seq_Idlogelaborazionedettaglio"/>
            <Sequence Name="Seq_Idordine"/>
            <Sequence Name="Seq_Idprofilo"/>
        </Sequences>
    </DataBase>
</DbToolProject>
